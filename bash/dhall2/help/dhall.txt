Usage: dhall [format | freeze | lint | rewrite-with-schemas | text | 
               to-directory-tree | resolve | type | normalize | encode | 
               decode | repl | diff | hash | package | tags | version | 
               haskell-syntax-tree | [--file FILE] [--output FILE] [--annotate] 
               [--alpha] [--no-cache] [--version]] [--explain] [--plain] 
             [--unicode | --ascii] [--censor]
  Interpreter for the Dhall language

Available options:
  -h,--help                Show this help text
  --file FILE              Read expression from a file instead of standard input
  --output FILE            Write result to a file instead of standard output
  --annotate               Add a type annotation to the output
  --alpha                  Î±-normalize expression
  --no-cache               Handle protected imports as if the cache was empty
  --version                Display version
  --explain                Explain error messages in more detail
  --plain                  Disable syntax highlighting
  --unicode                Format code using only Unicode syntax
  --ascii                  Format code using only ASCII syntax
  --censor                 Hide source code in error messages

Manipulate Dhall code
  format                   Standard code formatter for the Dhall language
  freeze                   Add integrity checks to remote import statements of
                           an expression
  lint                     Improve Dhall code by using newer language features
                           and removing dead code
  rewrite-with-schemas     Simplify Dhall code using a schemas record

Generate other formats from Dhall
  text                     Render a Dhall expression that evaluates to a Text
                           literal
  to-directory-tree        Convert nested records of Text literals into a
                           directory tree

Interpret Dhall
  resolve                  Resolve an expression's imports
  type                     Infer an expression's type
  normalize                Normalize an expression

Convert Dhall to and from its binary representation
  encode                   Encode a Dhall expression to binary
  decode                   Decode a Dhall expression from binary

Miscellaneous
  repl                     Interpret expressions in a REPL
  diff                     Render the difference between the normal form of two
                           expressions
  hash                     Compute semantic hashes for Dhall expressions
  package                  Create a package.dhall referencing the provided paths
  tags                     Generate etags file
  version                  Display version

Debugging this interpreter
  haskell-syntax-tree      Output the parsed syntax tree (for debugging)
