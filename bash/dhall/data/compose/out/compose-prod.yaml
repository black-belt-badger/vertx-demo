services:
  "config-server-nginx":
    container_name: "config-server-nginx"
    image: nginx
    ports:
    - "8887:80"
    volumes:
    - read_only: false
      source: ./configs/
      target: /usr/share/nginx/html
      type: bind
  "vertx-demo":
    command: |
      -conf='{
        "config-server": {
          "host": "51.21.163.63",
          "path": "/conf.json",
          "port": 8887,
          "scan-period": "PT30S",
          "version": "PROD inline"
        },
        "http.port": 8080,
        "postgres": {
          "database": "postgres",
          "host": "vertx-demo-db.chimcku4qngw.eu-north-1.rds.amazonaws.com",
          "password": "vertx_demo_password",
          "port": 5432,
          "user": "vertx_demo_admin"
        },
        "telnet.port": 5000
      }
      '
    container_name: "vertx-demo"
    depends_on:
    - "config-server-nginx"
    environment:
      JAVA_TOOL_OPTIONS: |
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dlogback.configurationFile=/logs/logback.xml
        -Djava.net.preferIPv4Stack=true
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.port=1099
        -Dcom.sun.management.jmxremote.rmi.port=1099
        -Djava.rmi.server.hostname=ec2-13-60-243-123.eu-north-1.compute.amazonaws.com
      VERSION: '1.0.13'
    image: "marekdudek/vertx-demo:1.0.13"
    ports:
    - "80:8080"
    - "5005:5005"
    - "5000:5000"
    - "1099:1099"
    volumes:
    - read_only: false
      source: ./logs/
      target: /logs/
      type: bind
    - read_only: false
      source: "./log-data/"
      target: "/log-data/"
      type: bind
